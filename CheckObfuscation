function Check-Obfuscation {
#Скрипт основан на вычислении Энтропии
                            param($Content)
                            $RequiredSimilarity = 0.8
                            $characterMap = @{}
                            $Set1 = @{'E'=9.818; 'T'=7.471;'A'=5.575;'R'=5.464;'S'=5.316;'I'=5.123;'N'=5.066;'O'=5.059;'L'=3.575;'C'=3.253;'M'=3.201;'$'=3.111;'P'=2.875;'D'=2.799;'U'=2.315;'-'=1.932;'.'=1.917;'"'=1.798;'F'=1.696;'G'=1.542;'B'=1.493;'H'=1.474;'='=1.342;'('=1.336;')'=1.33;'Y'=1.193;'W'=1.173;'V'=0.902;'{'=0.771;'}'=0.766;','=0.655;'X'=0.651;'['=0.621;']'=0.62;"'"=0.587;'_'=0.538;':'=0.483;'K'=0.453;'0'=0.45;'/'=0.432;'J'=0.345;'1'=0.316;'+'=0.27;'2'=0.245;'|'=0.238;';'=0.23;'\'=0.222;'Q'=0.218;'>'=0.196;'<'=0.185;'Z'=0.154;'3'=0.133;'*'=0.128;'`'=0.122;'5'=0.114;'4'=0.103;'@'=0.092;'6'=0.087;'8'=0.076;'7'=0.067;'%'=0.063;'9'=0.061;'!'=0.045;'?'=0.035;'&'=0.027}
                            $Set1 = $Set1.GetEnumerator() | Sort-Object -desc value | % {[PSCustomObject] @{ Name = $_.Name; Percent = $_.Value}}

                            
                            ($content -replace '(?s)<#.*?#>','' -replace '#.*','' -replace '\s','').ToCharArray() | %{
                                                                                                                       $key = $_.ToString().ToUpper()
                                                                                                                       $characterMap[$key] = 1 + $characterMap[$key] }

                            $total = ($characterMap.GetEnumerator() | Measure-Object -sum Value).Sum
                            $set2 =$characterMap.GetEnumerator() | Sort-Object -desc value | % {
                            [PSCustomObject] @{ Name = $_.Name; Percent = [Math]::Round($_.Value / $total * 100, 3)}}
                            

                            $allkeys = @($Set1) + @($Set2) | % {$_.Name }| Sort-Object -Unique

                            $set1Hash = @{}
                            $set2Hash = @{}
                            $setsToProcess = @($Set1, $Set1Hash), @($Set2, $Set2Hash)

                            foreach($set in $setsToProcess){
                                                            $set[0] | % {$set[1][$_.Name] = $_.Percent}
                                                            }

                            $dot = 0
                            $mag1 = 0
                            $mag2 = 0

                            foreach($key in $allkeys){
                                                      $dot += $set1Hash[$key] * $set2Hash[$key]
                                                      $mag1 +=  ($set1Hash[$key] * $set1Hash[$key])
                                                      $mag2 +=  ($set2Hash[$key] * $set2Hash[$key])
                                                     }

                            $mag1 = [Math]::Sqrt($mag1)
                            $mag2 = [Math]::Sqrt($mag2)

    
                            $rez = [Math]::Round($dot / ($mag1 * $mag2), 3)
                            
                            $IsObfuscated = $False
                            if($rez -lt $RequiredSimilarity) {
                                                              $IsObfuscated = $True
                                                              }
                            return($IsObfuscated)
                           

}

                          

Check-Obfuscation -Content ""
